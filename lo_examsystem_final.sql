-- MySQL dump 10.13  Distrib 5.7.18, for Linux (x86_64)
--
-- Host: localhost    Database: lo_examsystem
-- ------------------------------------------------------
-- Server version	5.7.18-0ubuntu0.16.10.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `lo_examsystem`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `lo_examsystem` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `lo_examsystem`;

--
-- Table structure for table `e_exam`
--

DROP TABLE IF EXISTS `e_exam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `e_exam` (
  `exam_id` int(11) NOT NULL AUTO_INCREMENT,
  `e_id` int(11) NOT NULL,
  `p_id` int(11) NOT NULL,
  `start_time` bigint(20) DEFAULT NULL,
  `last_time` int(20) NOT NULL,
  `participate` int(11) DEFAULT '0',
  PRIMARY KEY (`exam_id`,`e_id`,`p_id`),
  KEY `e_id111` (`e_id`),
  KEY `p_id111` (`p_id`),
  CONSTRAINT `e_id111` FOREIGN KEY (`e_id`) REFERENCES `enterprise` (`e_id`) ON DELETE CASCADE,
  CONSTRAINT `p_id111` FOREIGN KEY (`p_id`) REFERENCES `profession` (`p_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `e_exam`
--

LOCK TABLES `e_exam` WRITE;
/*!40000 ALTER TABLE `e_exam` DISABLE KEYS */;
INSERT INTO `e_exam` VALUES (2,1,2,1502855877616,151616,0),(2,2,1,1502855877616,456,0),(5,2,1,1501857543000,60,0),(6,2,1,1501944204000,60,0),(7,2,1,1501944302000,90,0),(8,1,1,1501944456000,60,0),(9,1,1,1501944894000,30,0);
/*!40000 ALTER TABLE `e_exam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `enterprise`
--

DROP TABLE IF EXISTS `enterprise`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enterprise` (
  `e_id` int(11) NOT NULL AUTO_INCREMENT,
  `e_name` varchar(11) CHARACTER SET utf8 DEFAULT NULL,
  `e_email` varchar(30) DEFAULT NULL,
  `e_pass` varchar(20) DEFAULT NULL,
  `e_phone` varchar(16) DEFAULT NULL,
  `e_address` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`e_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `enterprise`
--

LOCK TABLES `enterprise` WRITE;
/*!40000 ALTER TABLE `enterprise` DISABLE KEYS */;
INSERT INTO `enterprise` VALUES (1,'蓝鸥',NULL,NULL,NULL,NULL),(2,'阿里巴巴',NULL,NULL,NULL,NULL),(3,'123456789','123@qq.com','123456789','123456789','123456789');
/*!40000 ALTER TABLE `enterprise` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `examhistory`
--

DROP TABLE IF EXISTS `examhistory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `examhistory` (
  `h_id` int(11) NOT NULL AUTO_INCREMENT,
  `h_date` date DEFAULT NULL,
  `u_id` int(11) DEFAULT NULL,
  `h_grade` int(11) DEFAULT NULL,
  `h_title` varchar(50) DEFAULT NULL,
  `h_tag` varchar(20) DEFAULT '',
  `h_data` text,
  `u_point` int(11) DEFAULT NULL,
  PRIMARY KEY (`h_id`),
  KEY `u_id` (`u_id`),
  CONSTRAINT `examhistory_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `user` (`u_id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `examhistory`
--

LOCK TABLES `examhistory` WRITE;
/*!40000 ALTER TABLE `examhistory` DISABLE KEYS */;
INSERT INTO `examhistory` VALUES (10,'2017-08-01',12,30,'随机测验','','{\"score\":30,\"tagsRatio\":{\"html\":{\"wrong\":6,\"right\":3},\"css\":{\"wrong\":7,\"right\":3}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"131\":{\"q_id\":131,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"155\":{\"q_id\":155,\"q_type\":4,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answers\":[\"继承\",\"封装\",\"多态\"],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"trueAnswers\":[[\"继承\"],[\"封装\"],[\"多态\"]],\"answer\":\"继承|封装|多态\",\"isRight\":1},\"159\":{\"q_id\":159,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"161\":{\"q_id\":161,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0}}}',120),(11,'2017-08-01',12,30,'随机测验','','{\"score\":30,\"tagsRatio\":{\"html\":{\"wrong\":6,\"right\":3},\"css\":{\"wrong\":7,\"right\":3}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"96\":{\"q_id\":96,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"F\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"117\":{\"q_id\":117,\"q_type\":2,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[2],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"C\",\"isRight\":0},\"125\":{\"q_id\":125,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1}}}',40),(12,'2017-08-01',12,10,'随机测验','','{\"score\":10,\"tagsRatio\":{\"html\":{\"wrong\":8,\"right\":1},\"css\":{\"wrong\":9,\"right\":1}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"D\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"96\":{\"q_id\":96,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"C\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"125\":{\"q_id\":125,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"134\":{\"q_id\":134,\"q_type\":2,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[1],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"B\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"D\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"156\":{\"q_id\":156,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"161\":{\"q_id\":161,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0}}}',-20),(13,'2017-08-01',12,33,'随机测验','','{\"score\":33,\"tagsRatio\":{\"html\":{\"wrong\":6,\"right\":3},\"css\":{\"wrong\":7,\"right\":3}},\"quesList\":{\"97\":{\"q_id\":97,\"q_type\":2,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[1,2],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"B&C\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"F\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"103\":{\"q_id\":103,\"q_type\":4,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answers\":[\"继承\",\"\",\"\"],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"trueAnswers\":[[\"继承\"],[\"封装\"],[\"多态\"]],\"answer\":\"继承||\",\"isRight\":0},\"112\":{\"q_id\":112,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"C\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"159\":{\"q_id\":159,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0}}}',-57),(14,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"97\":{\"q_id\":97,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"F\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"103\":{\"q_id\":103,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"112\":{\"q_id\":112,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"159\":{\"q_id\":159,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0}}}',-127),(15,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"97\":{\"q_id\":97,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"F\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"103\":{\"q_id\":103,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"112\":{\"q_id\":112,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"159\":{\"q_id\":159,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0}}}',-197),(16,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"97\":{\"q_id\":97,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"T\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"103\":{\"q_id\":103,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"112\":{\"q_id\":112,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"159\":{\"q_id\":159,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0}}}',-267),(17,'2017-08-01',12,10,'随机测验','','{\"score\":10,\"tagsRatio\":{\"html\":{\"wrong\":8,\"right\":1},\"css\":{\"wrong\":9,\"right\":1}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"C\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"D\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"F\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":1},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"C\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"D\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"C\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0}}}',-327),(18,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0}}}',-397),(19,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0}}}',-467),(20,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0}}}',-537),(21,'2017-08-01',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":9,\"right\":0},\"css\":{\"wrong\":10,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"css\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0}}}',-607),(22,'2017-08-04',12,0,'专项训练','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":20,\"right\":0},\"css\":{\"wrong\":15,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"111\":{\"q_id\":111,\"q_type\":1,\"q_content\":\"算法的复杂度主要包括___和___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"时间复杂度|空间复杂度\",\"isRight\":0},\"114\":{\"q_id\":114,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"131\":{\"q_id\":131,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"132\":{\"q_id\":132,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"137\":{\"q_id\":137,\"q_type\":1,\"q_content\":\"python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"T\",\"isRight\":0},\"141\":{\"q_id\":141,\"q_type\":1,\"q_content\":\"请概述MVC体系结构。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\\\"业务逻辑\\\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"149\":{\"q_id\":149,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"153\":{\"q_id\":153,\"q_type\":1,\"q_content\":\"Sleep()和wait()的作用是一样的。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"155\":{\"q_id\":155,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"161\":{\"q_id\":161,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":4,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"164\":{\"q_id\":164,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"168\":{\"q_id\":168,\"q_type\":1,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"空\",\"isRight\":0},\"170\":{\"q_id\":170,\"q_type\":1,\"q_content\":\"Sleep()和wait()的作用是一样的。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"182\":{\"q_id\":182,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"183\":{\"q_id\":183,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"184\":{\"q_id\":184,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"203\":{\"q_id\":203,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"204\":{\"q_id\":204,\"q_type\":1,\"q_content\":\"Sleep()和wait()的作用是一样的。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0}}}',-677),(23,'2017-08-04',12,0,'css-专项训练','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":15,\"right\":0},\"css\":{\"wrong\":15,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"125\":{\"q_id\":125,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"132\":{\"q_id\":132,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"134\":{\"q_id\":134,\"q_type\":1,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"空\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":4,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"149\":{\"q_id\":149,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"150\":{\"q_id\":150,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"155\":{\"q_id\":155,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"160\":{\"q_id\":160,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"163\":{\"q_id\":163,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"164\":{\"q_id\":164,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"184\":{\"q_id\":184,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0}}}',-747),(24,'2017-08-04',12,0,'css-专项训练','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":15,\"right\":0},\"css\":{\"wrong\":15,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"125\":{\"q_id\":125,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"132\":{\"q_id\":132,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"134\":{\"q_id\":134,\"q_type\":1,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"空\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":4,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"149\":{\"q_id\":149,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"150\":{\"q_id\":150,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"155\":{\"q_id\":155,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"160\":{\"q_id\":160,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"163\":{\"q_id\":163,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"164\":{\"q_id\":164,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"184\":{\"q_id\":184,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0}}}',-817),(25,'2017-08-04',12,0,'css-专项训练','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":15,\"right\":0},\"css\":{\"wrong\":15,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"125\":{\"q_id\":125,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"132\":{\"q_id\":132,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"134\":{\"q_id\":134,\"q_type\":1,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"空\",\"isRight\":0},\"145\":{\"q_id\":145,\"q_type\":1,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":\"\\u0000\",\"score\":4,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"149\":{\"q_id\":149,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"150\":{\"q_id\":150,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"155\":{\"q_id\":155,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"160\":{\"q_id\":160,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"163\":{\"q_id\":163,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"164\":{\"q_id\":164,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"184\":{\"q_id\":184,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0}}}',-887),(26,'2017-08-04',12,0,'html-专项训练','1','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":20,\"right\":0},\"css\":{\"wrong\":15,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"118\":{\"q_id\":118,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"119\":{\"q_id\":119,\"q_type\":1,\"q_content\":\"Sleep()和wait()的作用是一样的。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"131\":{\"q_id\":131,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"136\":{\"q_id\":136,\"q_type\":1,\"q_content\":\"Sleep()和wait()的作用是一样的。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"137\":{\"q_id\":137,\"q_type\":1,\"q_content\":\"python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"T\",\"isRight\":0},\"139\":{\"q_id\":139,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"140\":{\"q_id\":140,\"q_type\":1,\"q_content\":\"算法的复杂度主要包括___和___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"时间复杂度|空间复杂度\",\"isRight\":0},\"142\":{\"q_id\":142,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"144\":{\"q_id\":144,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":4,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"158\":{\"q_id\":158,\"q_type\":1,\"q_content\":\"请概述MVC体系结构。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\\\"业务逻辑\\\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。\",\"isRight\":0},\"170\":{\"q_id\":170,\"q_type\":1,\"q_content\":\"Sleep()和wait()的作用是一样的。<br/>\",\"answer\":\"空\",\"score\":4,\"tags\":\"html\",\"trueAnswer\":\"F\",\"isRight\":0},\"182\":{\"q_id\":182,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"183\":{\"q_id\":183,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"201\":{\"q_id\":201,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"202\":{\"q_id\":202,\"q_type\":1,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"空\",\"isRight\":0},\"217\":{\"q_id\":217,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"218\":{\"q_id\":218,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0}}}',-957),(27,'2017-08-05',12,0,'蓝鸥web前端工程师1','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":3,\"right\":0},\"css\":{\"wrong\":2,\"right\":0}},\"quesList\":{\"120\":{\"q_id\":120,\"q_type\":1,\"q_content\":\"python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html\",\"trueAnswer\":\"T\",\"isRight\":0},\"121\":{\"q_id\":121,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0}}}',-1027),(28,'2017-08-05',12,0,'蓝鸥web前端工程师1','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":3,\"right\":0},\"css\":{\"wrong\":2,\"right\":0}},\"quesList\":{\"120\":{\"q_id\":120,\"q_type\":1,\"q_content\":\"python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html\",\"trueAnswer\":\"T\",\"isRight\":0},\"121\":{\"q_id\":121,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0}}}',-1097),(29,'2017-08-05',12,0,'蓝鸥web前端工程师1','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":3,\"right\":0},\"css\":{\"wrong\":2,\"right\":0}},\"quesList\":{\"120\":{\"q_id\":120,\"q_type\":1,\"q_content\":\"python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html\",\"trueAnswer\":\"T\",\"isRight\":0},\"121\":{\"q_id\":121,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0}}}',-1167),(30,'2017-08-06',12,4,'css-专项训练','2','{\"score\":4,\"tagsRatio\":{\"html\":{\"wrong\":13,\"right\":2},\"css\":{\"wrong\":13,\"right\":2},\"javascript\":{\"wrong\":0,\"right\":1}},\"quesList\":{\"103\":{\"q_id\":103,\"q_type\":4,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answers\":[\"\",\"\",\"\"],\"score\":6,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"trueAnswers\":[[\"继承\"],[\"封装\"],[\"多态\"]],\"answer\":\"||\",\"isRight\":0},\"107\":{\"q_id\":107,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"122\":{\"q_id\":122,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0},\"124\":{\"q_id\":124,\"q_type\":1,\"q_content\":\"请概述MVC体系结构。<br/>\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\\\"业务逻辑\\\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。\",\"isRight\":0},\"131\":{\"q_id\":131,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"B\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"146\":{\"q_id\":146,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"162\":{\"q_id\":162,\"q_type\":5,\"q_content\":\"编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）<br/>\",\"answer\":{\"word\":\"c\",\"code\":\"\"},\"score\":6,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"(本题答案只供参考:\\nprogramme name ForTest.java\\n  public\\nclass ForTest {\\n        public\\nstatic void main( String args[] ) {   \\n\\n                     int\\n i,j,mul,sum=0; \\n\\n                     for(i=1;i<=10;i++)\\n{ \\n\\n                            mul=1;\\n for(j=1,j<=i;j++) { \\n\\n                                       \\nmul=mul*j;\\n}        \\n\\n                                       \\nsum=sum+mul;\\n }  \\n\\n                                       \\nSystem.out.println(“1！+2！+3！+……+10！=\\n”+sum);\\n                                         }\\n\\n\\n                                \\n}\",\"isRight\":1},\"163\":{\"q_id\":163,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"A\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"165\":{\"q_id\":165,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"D\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"167\":{\"q_id\":167,\"q_type\":2,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[0,2],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"A&C\",\"isRight\":0},\"180\":{\"q_id\":180,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"C\",\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"200\":{\"q_id\":200,\"q_type\":2,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[2,3],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"C&D\",\"isRight\":0},\"201\":{\"q_id\":201,\"q_type\":2,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[0,1],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"A&B\",\"isRight\":0},\"202\":{\"q_id\":202,\"q_type\":2,\"q_content\":\"在数据表的视图中，可以进行的操作是()\",\"answers\":[0,1],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"B&D\",\"answer\":\"A&B\",\"isRight\":0},\"218\":{\"q_id\":218,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":4,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0}}}',22),(31,'2017-08-06',12,20,'随机测验','','{\"score\":20,\"tagsRatio\":{\"html\":{\"wrong\":8,\"right\":2},\"css\":{\"wrong\":8,\"right\":2},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"B\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":1},\"95\":{\"q_id\":95,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"96\":{\"q_id\":96,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"C\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":3,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"T\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"108\":{\"q_id\":108,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"125\":{\"q_id\":125,\"q_type\":1,\"q_content\":\"请简述类与对象的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。\",\"isRight\":0},\"147\":{\"q_id\":147,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"149\":{\"q_id\":149,\"q_type\":2,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[0,1],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"A&B\",\"isRight\":1},\"156\":{\"q_id\":156,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0}}}',-28),(32,'2017-08-06',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":10,\"right\":0},\"css\":{\"wrong\":10,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"112\":{\"q_id\":112,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"115\":{\"q_id\":115,\"q_type\":1,\"q_content\":\"要动态改变层中的内容可以使用的方法有（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&B\",\"answer\":\"空\",\"isRight\":0},\"126\":{\"q_id\":126,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"127\":{\"q_id\":127,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"131\":{\"q_id\":131,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"138\":{\"q_id\":138,\"q_type\":1,\"q_content\":\"面向对象的语言具有___性、___性、___性。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"继承|封装|多态\",\"isRight\":0},\"148\":{\"q_id\":148,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0}}}',-98),(33,'2017-08-06',12,0,'随机测验','','{\"score\":0,\"tagsRatio\":{\"html\":{\"wrong\":10,\"right\":0},\"css\":{\"wrong\":10,\"right\":0},\"javascript\":{\"wrong\":1,\"right\":0}},\"quesList\":{\"94\":{\"q_id\":94,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"100\":{\"q_id\":100,\"q_type\":1,\"q_content\":\"启动一个线程有两种方法，分别是run或者start。<br/>\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"F\",\"isRight\":0},\"113\":{\"q_id\":113,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"129\":{\"q_id\":129,\"q_type\":1,\"q_content\":\"以下程序的运行结果是（）<br/>int main(void)<br/>{<br/>printf(\\\"%s,%5.3s\\\\n\\\",\\\"computer\\\",\\\"computer\\\");<br/>return 0;<br/>}\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"130\":{\"q_id\":130,\"q_type\":1,\"q_content\":\"已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（<br/>）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"131\":{\"q_id\":131,\"q_type\":1,\"q_content\":\"在javascript里面，下面选项中不属于数组方法的是（）\",\"answer\":\"空\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"B\",\"isRight\":0},\"133\":{\"q_id\":133,\"q_type\":1,\"q_content\":\"在软件生命周期中，下列说法正确的是（）\",\"answers\":[],\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"A&C&D\",\"answer\":\"空\",\"isRight\":0},\"143\":{\"q_id\":143,\"q_type\":1,\"q_content\":\"简述super()与this()的区别。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象\",\"isRight\":0},\"144\":{\"q_id\":144,\"q_type\":1,\"q_content\":\"编写冒泡排序算法。<br/>\",\"answer\":\"\\u0000\",\"score\":10,\"tags\":\"html/css/javascript\",\"trueAnswer\":\"本题答案只供参考：void\\nbubble_sort_2(int a[], int len) \\n\\n       {\\n\\n\\n                int\\ni = 0; \\n\\n               int\\nj = 0; \\n\\n                int\\ntemp = 0;            //用于交换\\n\\n\\n                int\\nexchange = 0;        //用于记录每次扫描时是否发生交换\\n\\n\\n                for(i=0;\\ni<len-1; i++)      //进行n-1趟扫描\\n\\n\\n               {\\n\\n\\n                       exchange\\n= 0;      //每趟扫描之前对exchange置0\\n\\n\\n                       for(j=len-1;\\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\\n\\n\\n                       {\\n\\n\\n                                if(a[j+1]\\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\\n\\n\\n                                 {\\n\\n\\n                                          temp\\n= a[j]; \\n\\n                                          a[j]\\n= a[j+1]; \\n\\n                                         \\na[j+1]\\n= temp; \\n\\n                                         \\nexchange\\n= 1;   //发生交换，exchange置1\\n\\n\\n                                 }\\n\\n\\n                       }\\n\\n\\n                       if\\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\\n\\n\\n                                return;\\n          //不需要进行下次扫描\\n\\n\\n              }\\n\\n\\n     }\",\"isRight\":0},\"156\":{\"q_id\":156,\"q_type\":1,\"q_content\":\"写出asp中五个经常使用的对象___、___、___、___、___。<br/>\",\"answer\":\"A\",\"score\":10,\"tags\":\"html/css\",\"trueAnswer\":\"request|response|session|application|server\",\"isRight\":0}}}',-168);
/*!40000 ALTER TABLE `examhistory` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `h_que`
--

DROP TABLE IF EXISTS `h_que`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `h_que` (
  `h_id` int(11) NOT NULL,
  `q_id` int(11) NOT NULL,
  `hq_answer` text,
  `isRight` int(11) DEFAULT '1',
  PRIMARY KEY (`h_id`,`q_id`),
  KEY `q_id` (`q_id`),
  CONSTRAINT `h_que_ibfk_1` FOREIGN KEY (`h_id`) REFERENCES `examhistory` (`h_id`),
  CONSTRAINT `h_que_ibfk_2` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `h_que`
--

LOCK TABLES `h_que` WRITE;
/*!40000 ALTER TABLE `h_que` DISABLE KEYS */;
/*!40000 ALTER TABLE `h_que` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `level`
--

DROP TABLE IF EXISTS `level`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `level` (
  `lv_id` int(11) NOT NULL,
  `lv_need` int(11) DEFAULT NULL,
  PRIMARY KEY (`lv_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `level`
--

LOCK TABLES `level` WRITE;
/*!40000 ALTER TABLE `level` DISABLE KEYS */;
INSERT INTO `level` VALUES (1,0),(2,200),(3,300),(4,400),(5,500),(6,600),(7,700),(8,800),(9,900);
/*!40000 ALTER TABLE `level` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `others`
--

DROP TABLE IF EXISTS `others`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `others` (
  `o_id` int(11) NOT NULL AUTO_INCREMENT,
  `u_id` int(11) DEFAULT NULL,
  `o_time` date DEFAULT NULL,
  `o_title` varchar(100) DEFAULT NULL,
  `o_href` varchar(200) DEFAULT NULL,
  `o_remark` text,
  PRIMARY KEY (`o_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `others`
--

LOCK TABLES `others` WRITE;
/*!40000 ALTER TABLE `others` DISABLE KEYS */;
/*!40000 ALTER TABLE `others` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `pro_tag`
--

DROP TABLE IF EXISTS `pro_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `pro_tag` (
  `p_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  `pt_rate` int(11) DEFAULT NULL,
  PRIMARY KEY (`p_id`,`tag_id`),
  KEY `tag_id` (`tag_id`),
  CONSTRAINT `pro_tag_ibfk_1` FOREIGN KEY (`p_id`) REFERENCES `profession` (`p_id`),
  CONSTRAINT `pro_tag_ibfk_2` FOREIGN KEY (`tag_id`) REFERENCES `tag` (`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pro_tag`
--

LOCK TABLES `pro_tag` WRITE;
/*!40000 ALTER TABLE `pro_tag` DISABLE KEYS */;
INSERT INTO `pro_tag` VALUES (1,1,50),(1,2,50);
/*!40000 ALTER TABLE `pro_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `profession`
--

DROP TABLE IF EXISTS `profession`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `profession` (
  `p_id` int(11) NOT NULL AUTO_INCREMENT,
  `p_name` varchar(20) NOT NULL,
  PRIMARY KEY (`p_id`),
  UNIQUE KEY `p_name` (`p_name`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `profession`
--

LOCK TABLES `profession` WRITE;
/*!40000 ALTER TABLE `profession` DISABLE KEYS */;
INSERT INTO `profession` VALUES (2,'java工程师'),(1,'web前端工程师');
/*!40000 ALTER TABLE `profession` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `q_exam`
--

DROP TABLE IF EXISTS `q_exam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `q_exam` (
  `exam_id` int(11) NOT NULL,
  `q_id` int(11) NOT NULL,
  `score` int(11) DEFAULT '0',
  PRIMARY KEY (`exam_id`,`q_id`),
  KEY `q_id111` (`q_id`),
  CONSTRAINT `exam111` FOREIGN KEY (`exam_id`) REFERENCES `e_exam` (`exam_id`) ON DELETE CASCADE,
  CONSTRAINT `q_id111` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `q_exam`
--

LOCK TABLES `q_exam` WRITE;
/*!40000 ALTER TABLE `q_exam` DISABLE KEYS */;
INSERT INTO `q_exam` VALUES (2,120,10),(2,121,10),(2,122,10),(5,265,5),(5,266,6),(6,267,5),(6,268,5),(7,269,5),(8,270,5),(9,271,5);
/*!40000 ALTER TABLE `q_exam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `que_tag`
--

DROP TABLE IF EXISTS `que_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `que_tag` (
  `q_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`q_id`,`tag_id`),
  KEY `tag_id` (`tag_id`),
  CONSTRAINT `que_tag_ibfk_1` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`),
  CONSTRAINT `que_tag_ibfk_2` FOREIGN KEY (`tag_id`) REFERENCES `tag` (`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `que_tag`
--

LOCK TABLES `que_tag` WRITE;
/*!40000 ALTER TABLE `que_tag` DISABLE KEYS */;
INSERT INTO `que_tag` VALUES (94,1),(95,1),(96,1),(97,1),(98,1),(99,1),(100,1),(101,1),(102,1),(103,1),(104,1),(105,1),(106,1),(107,1),(108,1),(109,1),(111,1),(112,1),(113,1),(114,1),(115,1),(116,1),(117,1),(118,1),(119,1),(120,1),(121,1),(122,1),(123,1),(124,1),(125,1),(126,1),(127,1),(128,1),(129,1),(130,1),(131,1),(132,1),(133,1),(134,1),(135,1),(136,1),(137,1),(138,1),(139,1),(140,1),(141,1),(142,1),(143,1),(144,1),(145,1),(146,1),(147,1),(148,1),(149,1),(150,1),(151,1),(152,1),(153,1),(154,1),(155,1),(156,1),(157,1),(158,1),(159,1),(160,1),(161,1),(162,1),(163,1),(164,1),(165,1),(166,1),(167,1),(168,1),(169,1),(170,1),(171,1),(172,1),(173,1),(174,1),(175,1),(176,1),(177,1),(178,1),(179,1),(180,1),(181,1),(182,1),(183,1),(184,1),(185,1),(186,1),(187,1),(188,1),(189,1),(190,1),(191,1),(192,1),(193,1),(194,1),(195,1),(196,1),(197,1),(198,1),(199,1),(200,1),(201,1),(202,1),(203,1),(204,1),(205,1),(206,1),(207,1),(208,1),(209,1),(210,1),(211,1),(212,1),(213,1),(214,1),(215,1),(216,1),(217,1),(218,1),(219,1),(220,1),(221,1),(222,1),(223,1),(224,1),(225,1),(226,1),(227,1),(228,1),(229,1),(230,1),(231,1),(232,1),(233,1),(234,1),(235,1),(236,1),(237,1),(238,1),(239,1),(240,1),(241,1),(242,1),(243,1),(244,1),(245,1),(246,1),(247,1),(248,1),(249,1),(250,1),(251,1),(252,1),(253,1),(254,1),(255,1),(256,1),(257,1),(258,1),(259,1),(260,1),(261,1),(262,1),(263,1),(264,1),(94,2),(95,2),(96,2),(97,2),(98,2),(99,2),(100,2),(103,2),(104,2),(105,2),(106,2),(107,2),(108,2),(109,2),(111,2),(112,2),(113,2),(114,2),(115,2),(116,2),(117,2),(121,2),(122,2),(123,2),(124,2),(125,2),(126,2),(127,2),(128,2),(129,2),(130,2),(131,2),(132,2),(133,2),(134,2),(138,2),(139,2),(140,2),(141,2),(142,2),(143,2),(144,2),(145,2),(146,2),(147,2),(148,2),(149,2),(150,2),(151,2),(155,2),(156,2),(157,2),(158,2),(159,2),(160,2),(161,2),(162,2),(163,2),(164,2),(165,2),(166,2),(167,2),(168,2),(172,2),(173,2),(174,2),(175,2),(176,2),(177,2),(178,2),(179,2),(180,2),(181,2),(182,2),(183,2),(184,2),(185,2),(189,2),(190,2),(191,2),(192,2),(193,2),(194,2),(195,2),(196,2),(197,2),(198,2),(199,2),(200,2),(201,2),(202,2),(206,2),(207,2),(208,2),(209,2),(210,2),(211,2),(212,2),(213,2),(214,2),(215,2),(216,2),(217,2),(218,2),(219,2),(223,2),(224,2),(225,2),(226,2),(227,2),(228,2),(229,2),(230,2),(231,2),(232,2),(233,2),(234,2),(235,2),(236,2),(240,2),(241,2),(242,2),(243,2),(244,2),(245,2),(246,2),(247,2),(248,2),(249,2),(250,2),(251,2),(252,2),(253,2),(257,2),(258,2),(259,2),(260,2),(261,2),(262,2),(263,2),(264,2),(269,2),(270,2),(108,3),(109,3),(127,3),(128,3),(144,3),(145,3),(161,3),(162,3),(178,3),(179,3),(195,3),(196,3),(212,3),(213,3),(229,3),(230,3),(246,3),(247,3),(263,3),(264,3),(266,3),(267,3),(268,4),(271,4);
/*!40000 ALTER TABLE `que_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `quecollection`
--

DROP TABLE IF EXISTS `quecollection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `quecollection` (
  `u_id` int(11) NOT NULL,
  `q_id` int(11) NOT NULL,
  PRIMARY KEY (`u_id`,`q_id`),
  KEY `q_id` (`q_id`),
  CONSTRAINT `quecollection_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `user` (`u_id`),
  CONSTRAINT `quecollection_ibfk_2` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `quecollection`
--

LOCK TABLES `quecollection` WRITE;
/*!40000 ALTER TABLE `quecollection` DISABLE KEYS */;
INSERT INTO `quecollection` VALUES (12,94),(12,95),(12,100),(12,120),(12,122),(12,150);
/*!40000 ALTER TABLE `quecollection` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `quecomment`
--

DROP TABLE IF EXISTS `quecomment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `quecomment` (
  `u_id` int(11) NOT NULL,
  `q_id` int(11) NOT NULL,
  `qc_date` date DEFAULT NULL,
  `qc_content` text,
  `qc_zan` int(11) DEFAULT NULL,
  PRIMARY KEY (`u_id`,`q_id`),
  KEY `q_id` (`q_id`),
  CONSTRAINT `quecomment_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `user` (`u_id`),
  CONSTRAINT `quecomment_ibfk_2` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `quecomment`
--

LOCK TABLES `quecomment` WRITE;
/*!40000 ALTER TABLE `quecomment` DISABLE KEYS */;
/*!40000 ALTER TABLE `quecomment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question`
--

DROP TABLE IF EXISTS `question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `question` (
  `q_id` int(11) NOT NULL AUTO_INCREMENT,
  `q_type` int(11) DEFAULT NULL,
  `q_content` text,
  `q_answer` text,
  `q_analysis` text,
  `q_right` int(11) DEFAULT NULL,
  `q_wrong` int(11) DEFAULT NULL,
  `q_reportnum` int(11) DEFAULT NULL,
  `q_difficulty` int(11) DEFAULT NULL,
  `e_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`q_id`),
  KEY `e_id` (`e_id`),
  CONSTRAINT `e_id` FOREIGN KEY (`e_id`) REFERENCES `enterprise` (`e_id`)
) ENGINE=InnoDB AUTO_INCREMENT=272 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question`
--

LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (94,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,2,1),(95,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,5,1),(96,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,5,1),(97,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,2,1),(98,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,2,1),(99,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,2,1),(100,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,2,1),(101,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,2,1),(102,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,2,1),(103,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,2,1),(104,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,2,1),(105,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,2,1),(106,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,2,1),(107,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,2,1),(108,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,5,1),(109,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,5,1),(111,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,2,1),(112,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,1,1),(113,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,1,1),(114,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,1,1),(115,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,1,1),(116,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,1,1),(117,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,1,1),(118,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,1,1),(119,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,1,1),(120,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,1,1),(121,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,1,1),(122,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,1,1),(123,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,1,1),(124,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,1,1),(125,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,1,1),(126,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,1,1),(127,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,1,1),(128,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,1,1),(129,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,2,1),(130,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,2,1),(131,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,2,1),(132,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,2,1),(133,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,2,1),(134,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,2,1),(135,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,2,1),(136,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,2,1),(137,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,2,1),(138,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,2,1),(139,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,2,1),(140,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,2,1),(141,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,2,1),(142,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,2,1),(143,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,2,1),(144,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,2,1),(145,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,2,1),(146,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,3,1),(147,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,3,1),(148,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,3,1),(149,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,3,1),(150,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,3,1),(151,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,3,1),(152,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,3,1),(153,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,3,1),(154,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,3,1),(155,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,3,1),(156,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,3,1),(157,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,3,1),(158,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,3,1),(159,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,3,1),(160,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,3,1),(161,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,3,1),(162,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,3,1),(163,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,4,1),(164,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,4,1),(165,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,4,1),(166,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,4,1),(167,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,4,1),(168,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,4,1),(169,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,4,1),(170,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,4,1),(171,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,4,1),(172,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,4,1),(173,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,4,1),(174,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,4,1),(175,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,4,1),(176,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,4,1),(177,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,4,1),(178,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,4,1),(179,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,4,1),(180,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,5,1),(181,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,5,1),(182,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,5,1),(183,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,5,1),(184,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,5,1),(185,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,5,1),(186,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,5,1),(187,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,5,1),(188,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,5,1),(189,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,5,1),(190,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,5,1),(191,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,5,1),(192,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,5,1),(193,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,5,1),(194,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,5,1),(195,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,5,1),(196,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,5,1),(197,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,6,1),(198,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,6,1),(199,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,6,1),(200,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,6,1),(201,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,6,1),(202,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,6,1),(203,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,6,1),(204,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,6,1),(205,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,6,1),(206,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,6,1),(207,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,6,1),(208,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,6,1),(209,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,6,1),(210,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,6,1),(211,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,6,1),(212,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,6,1),(213,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,6,1),(214,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,7,1),(215,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,7,1),(216,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,7,1),(217,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,7,1),(218,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,7,1),(219,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,7,1),(220,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,7,1),(221,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,7,1),(222,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,7,1),(223,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,7,1),(224,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,7,1),(225,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,7,1),(226,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,7,1),(227,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,7,1),(228,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,7,1),(229,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,7,1),(230,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,7,1),(231,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,8,1),(232,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,8,1),(233,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,8,1),(234,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,8,1),(235,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,8,1),(236,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,8,1),(237,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,8,1),(238,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,8,1),(239,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,8,1),(240,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,8,1),(241,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,8,1),(242,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,8,1),(243,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,8,1),(244,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,8,1),(245,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,8,1),(246,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,8,1),(247,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,8,1),(248,1,'以下程序的运行结果是（）\nint main(void)\n{\nprintf(\"%s,%5.3s\\n\",\"computer\",\"computer\");\nreturn 0;\n};;A.computer,puter;;B.computer,com;;C.computer,computer;;D.computer,compu.ter','B','无',0,0,0,9,1),(249,1,'已知数据表A中每个元素距其最终位置不远，为节省时间，应该采用的算法是（\n）;;A.直接选择排序;;B.堆排序;;C.快速排序;;D.直接插入排序','B','无',0,0,0,9,1),(250,1,'在javascript里面，下面选项中不属于数组方法的是（）;;A.sort();;B.length();;C.concat();;D.reverse()','B','无',0,0,0,9,1),(251,2,'要动态改变层中的内容可以使用的方法有（）;;A.innerHTML;;B.innerHTML;;C.通过设置层的隐藏和显示来实现;;D.通过设置层的样式属性的display属性','A&B','无',0,0,0,9,1),(252,2,'在软件生命周期中，下列说法正确的是（）;;A.软件生命周期分为计划、开发、运行三个阶段;;B.在计划阶段要进行问题定义和需求分析;;C.在开发后期要进行编写代码和软件测试;;D.在运行阶段主要进行软件维护','A&C&D','无',0,0,0,9,1),(253,2,'在数据表的视图中，可以进行的操作是();;A.修改字段类型;;B.修改字段名称;;C.删除一个字段;;D.删除一条记录','B&D','无',0,0,0,9,1),(254,3,'启动一个线程有两种方法，分别是run或者start。\n','F','启动线\n程的方法是start()，而run是线程要执行的方法，如果你直接调用run，那还是在当前线程里面的，不会启动新的线程。',0,0,0,9,1),(255,3,'Sleep()和wait()的作用是一样的。\n','F','sleep方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行；wai是线程交互时，如果对一个同步对象X发出一个wait调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间:',0,0,0,9,1),(256,3,'python中match函数只检测RE是不是在string的开始位置，而search()会扫描整个string查找匹配。\n','T','本题考查的是python中的match()与search()的区别.',0,0,0,9,1),(257,4,'面向对象的语言具有___性、___性、___性。\n','继承|封装|多态','此题考查面向对象语言的特点。',0,0,0,9,1),(258,4,'写出asp中五个经常使用的对象___、___、___、___、___。\n','request|response|session|application|server','无',0,0,0,9,1),(259,4,'算法的复杂度主要包括___和___。\n','时间复杂度|空间复杂度','无',0,0,0,9,1),(260,5,'请概述MVC体系结构。\n','MVC包括三类对象,分别是模型(model),视图(view)以及控制器(controller),其中，控制器定义用户界面对用户输入的响应方式。在MVC体系中模型通常被称为\"业务逻辑\"是真正完成任务的代码视图就是使用界面反映数据的变化。控制器控制着模型和视图之间的交互过程它决定着向用户返回怎样的视图、检查通过界面输入的信息以及选择处理输入信息的模型在MVC中表示层和逻辑层分离各部分可相互独立进行开发便于开发和维护提高了开发效率。','无',0,0,0,9,1),(261,5,'请简述类与对象的区别。\n','类是对象的原型，代表了同一类的共性与特征，指明该类包含哪些属性与方法；对象实类的具体实现，不同对象之间存在着差异，属性值可能不同，所实现的功能也可能有差异，一个类可以定义多个对象。','无',0,0,0,9,1),(262,5,'简述super()与this()的区别。\n','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象','super()表示当前类的父亲；this()表示当前对象，也就是当前类的对象。举个例子:假设你定义一个新的类A，这个类继承了类B,也就是说B是A的父类，那么如果A中有个方法aa()；B中也有方法aa(),那么在A中调用this.aa()调用的就是A中定义的方法，而super.aa()调用的就是A的父类B中定义的方法aa();super的三种使用方法：(1)用来访问父类中被覆盖的方法，(2)用来调用父类中的构造方法，(3)用来访问父类中被隐藏的成员变量。',0,0,0,9,1),(263,6,'编写冒泡排序算法。\n','本题答案只供参考：void\nbubble_sort_2(int a[], int len) \n\n       {\n\n\n                int\ni = 0; \n\n               int\nj = 0; \n\n                int\ntemp = 0;            //用于交换\n\n\n                int\nexchange = 0;        //用于记录每次扫描时是否发生交换\n\n\n                for(i=0;\ni<len-1; i++)      //进行n-1趟扫描\n\n\n               {\n\n\n                       exchange\n= 0;      //每趟扫描之前对exchange置0\n\n\n                       for(j=len-1;\nj>=i; j--)  //从后往前交换，这样最小值冒泡到开头部分\n\n\n                       {\n\n\n                                if(a[j+1]\n< a[j])    //如果a[j]小于a[j-1],交换两元素值\n\n\n                                 {\n\n\n                                          temp\n= a[j]; \n\n                                          a[j]\n= a[j+1]; \n\n                                         \na[j+1]\n= temp; \n\n                                         \nexchange\n= 1;   //发生交换，exchange置1\n\n\n                                 }\n\n\n                       }\n\n\n                       if\n(exchange != 1)      //此趟扫描没有发生过交换，说明已经是排序的\n\n\n                                return;\n          //不需要进行下次扫描\n\n\n              }\n\n\n     }','无',0,0,0,9,1),(264,6,'编写一个java程序，在屏幕上面输出1！+2！+3！+....+10！的和（循环）\n','(本题答案只供参考:\nprogramme name ForTest.java\n  public\nclass ForTest {\n        public\nstatic void main( String args[] ) {   \n\n                     int\n i,j,mul,sum=0; \n\n                     for(i=1;i<=10;i++)\n{ \n\n                            mul=1;\n for(j=1,j<=i;j++) { \n\n                                       \nmul=mul*j;\n}        \n\n                                       \nsum=sum+mul;\n }  \n\n                                       \nSystem.out.println(“1！+2！+3！+……+10！=\n”+sum);\n                                         }\n\n\n                                \n}','无',0,0,0,9,1),(265,1,'这里是题目;;A.测试内容;;B.测试内容','B','asa',0,0,0,9,2),(266,1,'这里是题目;;A.测试内容;;B.测试内容','B','aad',0,0,0,9,2),(267,1,'这里是题目;;A.测试内容;;B.测试内容;;C.','B','adad',0,0,0,9,2),(268,1,'这里是题目;;A.测试内容;;B.测试内容','B','d',0,0,0,9,2),(269,1,'这里是题目;;A.测试内容;;B.测试内容','B','sd',0,0,0,9,2),(270,1,'这里是题目;;A.测试内容;;B.测试内容','B','发 ',0,0,0,9,1),(271,1,'这里是题目;;A.测试内容;;B.测试内容','B','fenxi',0,0,0,9,1);
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tag`
--

DROP TABLE IF EXISTS `tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tag` (
  `tag_id` int(11) NOT NULL AUTO_INCREMENT,
  `tag_name` varchar(20) NOT NULL,
  PRIMARY KEY (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tag`
--

LOCK TABLES `tag` WRITE;
/*!40000 ALTER TABLE `tag` DISABLE KEYS */;
INSERT INTO `tag` VALUES (1,'html'),(2,'css'),(3,'javascript'),(4,'html5'),(5,'css3'),(6,'nodejs'),(7,'less'),(8,'jquery'),(9,'vue'),(10,'java'),(11,'mysql'),(12,'spring'),(13,'jdbc'),(14,'mybatis'),(15,'hibernate');
/*!40000 ALTER TABLE `tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `testpaper`
--

DROP TABLE IF EXISTS `testpaper`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `testpaper` (
  `t_id` int(11) NOT NULL AUTO_INCREMENT,
  `p_id` int(11) DEFAULT NULL,
  `t_ochoose_num` int(11) DEFAULT NULL,
  `t_mchoose_num` int(11) DEFAULT NULL,
  `t_judge_num` int(11) DEFAULT NULL,
  `t_fill_num` int(11) DEFAULT NULL,
  `t_squestion_num` int(11) DEFAULT NULL,
  `t_code_num` int(11) DEFAULT NULL,
  `t_ochoose_score` int(11) DEFAULT NULL,
  `t_mchoose_score` int(11) DEFAULT NULL,
  `t_judge_score` int(11) DEFAULT NULL,
  `t_fill_score` int(11) DEFAULT NULL,
  `t_squestion_score` int(11) DEFAULT NULL,
  `t_code_score` int(11) DEFAULT NULL,
  PRIMARY KEY (`t_id`),
  KEY `p_id` (`p_id`),
  CONSTRAINT `testpaper_ibfk_1` FOREIGN KEY (`p_id`) REFERENCES `profession` (`p_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `testpaper`
--

LOCK TABLES `testpaper` WRITE;
/*!40000 ALTER TABLE `testpaper` DISABLE KEYS */;
INSERT INTO `testpaper` VALUES (1,2,10,0,0,0,0,0,10,0,0,0,0,0),(2,1,5,1,1,1,1,1,10,10,10,10,10,10);
/*!40000 ALTER TABLE `testpaper` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `u_e`
--

DROP TABLE IF EXISTS `u_e`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `u_e` (
  `u_id` int(11) NOT NULL,
  `e_id` int(11) NOT NULL,
  PRIMARY KEY (`u_id`,`e_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `u_e`
--

LOCK TABLES `u_e` WRITE;
/*!40000 ALTER TABLE `u_e` DISABLE KEYS */;
INSERT INTO `u_e` VALUES (11,1),(11,2),(12,1);
/*!40000 ALTER TABLE `u_e` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `u_exam`
--

DROP TABLE IF EXISTS `u_exam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `u_exam` (
  `u_id` int(11) DEFAULT NULL,
  `exam_id` int(11) DEFAULT NULL,
  `score` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `u_exam`
--

LOCK TABLES `u_exam` WRITE;
/*!40000 ALTER TABLE `u_exam` DISABLE KEYS */;
INSERT INTO `u_exam` VALUES (12,1,0),(12,5,4);
/*!40000 ALTER TABLE `u_exam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `u_que`
--

DROP TABLE IF EXISTS `u_que`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `u_que` (
  `u_id` int(11) NOT NULL,
  `q_id` int(11) NOT NULL,
  `uq_answer` text,
  PRIMARY KEY (`u_id`,`q_id`),
  KEY `q_id` (`q_id`),
  CONSTRAINT `u_que_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `user` (`u_id`),
  CONSTRAINT `u_que_ibfk_2` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `u_que`
--

LOCK TABLES `u_que` WRITE;
/*!40000 ALTER TABLE `u_que` DISABLE KEYS */;
INSERT INTO `u_que` VALUES (12,100,NULL),(12,150,NULL);
/*!40000 ALTER TABLE `u_que` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `u_tag`
--

DROP TABLE IF EXISTS `u_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `u_tag` (
  `u_id` int(11) DEFAULT NULL,
  `tag_id` int(11) DEFAULT NULL,
  `ut_right` int(11) DEFAULT NULL,
  `ut_wrong` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `u_tag`
--

LOCK TABLES `u_tag` WRITE;
/*!40000 ALTER TABLE `u_tag` DISABLE KEYS */;
INSERT INTO `u_tag` VALUES (11,3,6,8),(12,3,8,12),(13,3,8,10),(14,3,9,11),(15,3,10,12),(16,3,11,13),(17,3,12,14),(11,2,100,79),(12,2,104,121),(13,2,100,81),(14,2,100,82),(15,2,180,83),(16,2,100,84),(17,2,100,85),(11,1,73,67),(12,1,78,109),(13,1,75,69),(14,1,76,70),(15,1,77,71),(16,1,78,72),(17,1,79,73);
/*!40000 ALTER TABLE `u_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `u_id` int(11) NOT NULL AUTO_INCREMENT,
  `u_name` varchar(16) NOT NULL,
  `u_email` varchar(25) NOT NULL,
  `u_pass` varchar(16) NOT NULL,
  `p_id` int(11) DEFAULT NULL,
  `u_point` int(11) DEFAULT NULL,
  `u_img` varchar(50) DEFAULT 'default.jpg',
  PRIMARY KEY (`u_id`),
  UNIQUE KEY `u_email` (`u_email`),
  KEY `p_id` (`p_id`),
  CONSTRAINT `user_ibfk_1` FOREIGN KEY (`p_id`) REFERENCES `profession` (`p_id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (11,'1233','12@qq.com','123456',1,89,'head.png'),(12,'tosim','82415327@qq.com','056210',1,-168,'default.jpg'),(13,'王前','wangqian@qq.com','123456',1,87,'icon1.jpg'),(14,'李阳','liyang@qq.com','123456',1,86,'icon2.jpg'),(15,'赵立','zhaoli@qq.com','123456',1,85,'icon3.jpg'),(16,'许永','xuyong@qq.com','123456',1,84,'icon4.jpg'),(17,'李东','lidong@qq.com','123456',1,83,'default.jpg');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-08-06 15:43:46
